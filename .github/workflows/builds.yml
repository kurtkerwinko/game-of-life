name: Builds

on:
  release:
    types: [published]
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      LOVE_VERSION: 11.4
      APPIMAGE_VERSION: 13
      BUILD_DIR: /tmp/builds
      BUILD_UTILS_DIR: /tmp/build_utils

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup environment
      id: setup_environment
      run: |
        if [[ "${{ github.event_name }}" = "pull_request" ]]; then
          PR_NUMBER=$(jq -r .pull_request.number "${GITHUB_EVENT_PATH}")
          BUILD_VERSION="0.${PR_NUMBER}.${{ github.run_number }}"
        else
          RELEASE_REGEX="^([0-9])+\.([0-9])+\.([0-9])+$"
          if [[ "${{ github.event.release.tag_name }}" =~ ${RELEASE_REGEX} ]]; then
            BUILD_VERSION="${{ github.event.release.tag_name }}"
          else
            exit 1
          fi
        fi
        echo "BUILD_VERSION=${BUILD_VERSION}" >> "$GITHUB_ENV"

        sudo apt update -y
        sudo apt install -y libfuse2

        mkdir -p ${BUILD_DIR} ${BUILD_UTILS_DIR}
        cd ${BUILD_UTILS_DIR}

        # Download love
        LOVE_URL="https://github.com/love2d/love/releases/download/${LOVE_VERSION}/love-${LOVE_VERSION}-x86_64.AppImage"
        LOVE_PATH="${BUILD_UTILS_DIR}/love.AppImage"
        curl -Lo ${LOVE_PATH} ${LOVE_URL}
        chmod +x ${LOVE_PATH}
        echo "LOVE_PATH=${LOVE_PATH}" >> "$GITHUB_ENV"

        LOVE_URL="https://github.com/love2d/love/releases/download/${LOVE_VERSION}/love-${LOVE_VERSION}-win32.zip"
        curl -Lo love.zip ${LOVE_URL}
        unzip -j love.zip love-${LOVE_VERSION}-win32/love.exe

        # Download AppImage
        APPIMAGE_URL="https://github.com/AppImage/AppImageKit/releases/download/${APPIMAGE_VERSION}/appimagetool-x86_64.AppImage"
        APPIMAGE_PATH="${BUILD_UTILS_DIR}/appimagetool.AppImage"
        curl -Lo ${APPIMAGE_PATH} ${APPIMAGE_URL}
        chmod +x ${APPIMAGE_PATH}
        echo "APPIMAGE_PATH=${APPIMAGE_PATH}" >> "$GITHUB_ENV"

        echo "LOVE_BUILD_NAME=GameOfLife-${BUILD_VERSION}.love" >> "$GITHUB_ENV"
        echo "APPIMAGE_BUILD_NAME=GameOfLife-${BUILD_VERSION}.AppImage" >> "$GITHUB_ENV"
        echo "EXE_BUILD_NAME=GameOfLife-${BUILD_VERSION}.exe" >> "$GITHUB_ENV"

    - name: Build love file
      id: build_love_file
      run: zip -9 -r ${BUILD_DIR}/${LOVE_BUILD_NAME} .
      working-directory: src

    - name: Build Linux
      id: build_linux
      run: |
        cd ${BUILD_UTILS_DIR}
        ${LOVE_PATH} --appimage-extract
        cat squashfs-root/bin/love ${BUILD_DIR}/${LOVE_BUILD_NAME} > squashfs-root/bin/GameOfLife
        rm squashfs-root/bin/love squashfs-root/love.desktop
        chmod +x squashfs-root/bin/GameOfLife
        cp ${GITHUB_WORKSPACE}/gameoflife.desktop squashfs-root
        ${APPIMAGE_PATH} squashfs-root ${BUILD_DIR}/${APPIMAGE_BUILD_NAME}
        rm -r squashfs-root

    - name: Build Windows
      id: build_windows
      run: cat love.exe ${BUILD_DIR}/${LOVE_BUILD_NAME} > ${BUILD_DIR}/${EXE_BUILD_NAME}
      working-directory: ${{ env.BUILD_UTILS_DIR }}

    - name: Upload love file
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.LOVE_BUILD_NAME }}
        path: ${{ env.BUILD_DIR }}/${{ env.LOVE_BUILD_NAME }}

    - name: Upload AppImage file
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APPIMAGE_BUILD_NAME }}
        path: ${{ env.BUILD_DIR }}/${{ env.APPIMAGE_BUILD_NAME }}

    - name: Upload exe file
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.EXE_BUILD_NAME }}
        path: ${{ env.BUILD_DIR }}/${{ env.EXE_BUILD_NAME }}

    - name: Upload releases
      id: upload_releases
      run: |
        .github/scripts/upload_release_asset.sh "${BUILD_DIR}/${LOVE_BUILD_NAME}"
        .github/scripts/upload_release_asset.sh "${BUILD_DIR}/${APPIMAGE_BUILD_NAME}"
        .github/scripts/upload_release_asset.sh "${BUILD_DIR}/${EXE_BUILD_NAME}"
      env:
        SECRETS_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ github.event_name == 'release' }}
